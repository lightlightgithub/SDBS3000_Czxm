<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:loc="clr-namespace:SDBS3000.Resources"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">
    <!--#region -->
    <!--模板-->
    <ControlTemplate x:Key="MenuItem_Template" TargetType="{x:Type MenuItem}">
         <Border x:Name="border"
             Background="{DynamicResource tipBg4}"
             BorderBrush="#106db0"
             BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="40" MinWidth="22" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="30" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <!--  // Icon // margin左移一点点， 图标不遮挡  -->
                <ContentPresenter x:Name="Icon"
                               Width="25"
                               Height="25"
                               Margin="9,0,0,0"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               ContentSource="Icon" />
                <ContentPresenter Name="PART_Ct"
                               Grid.Column="2"
                               Margin="0,2,0,0"
                               HorizontalAlignment="Left"
                               VerticalAlignment="Center"
                               ContentSource="Header"
                               RecognizesAccessKey="True"
                               TextBlock.FontSize="{TemplateBinding FontSize}"
                               TextBlock.Foreground="{TemplateBinding Foreground}">
                    <ContentPresenter.Resources>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="TextWrapping" Value="Wrap" />
                        </Style>
                    </ContentPresenter.Resources>
                </ContentPresenter>
                <Popup x:Name="PART_Popup"
                    AllowsTransparency="true"
                    Focusable="false"
                    HorizontalOffset="-2"
                    IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                    Placement="Right"
                    PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                    VerticalOffset="0">
                    <Border x:Name="SubMenuBorder"
                         Background="#106db0"
                         BorderBrush="#106db0">
                        <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <Canvas HorizontalAlignment="Left" VerticalAlignment="Top" />
                                <ItemsPresenter x:Name="ItemsPresenter"
                                             Grid.IsSharedSizeScope="true"
                                             KeyboardNavigation.DirectionalNavigation="Cycle"
                                             KeyboardNavigation.TabNavigation="Cycle" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>
                <!--  右侧小箭头  -->
                <Path x:Name="getsubitemicon"
                   Grid.Column="5"
                   Width="20"
                   Height="20"
                   Data="{StaticResource getsubitemicon}"
                   Fill="{DynamicResource txtColor3}"
                   Stretch="Uniform"
                   Visibility="Hidden" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter TargetName="getsubitemicon" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="border" Property="Background" Value="#c9e9f8" />
                <Setter TargetName="border" Property="BorderBrush" Value="#404D5B" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="border" Property="Background" Value="#81d4fa" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    
    <!--#endregion-->
    
    
    
    
    
    
    <Style TargetType="{x:Type ToolTip}">
        <Setter Property="FontSize" Value="22"/>
        <!-- 设置字体大小 -->
        <!--<Setter Property="FontWeight" Value="Bold"/>-->
        <!-- 可选的，设置字体粗细为粗体 -->
        <!--<Setter Property="Foreground" Value="Blue"/>-->
        <!-- 可选的，设置字体颜色为蓝色 -->
        <Setter Property="Background" Value="LightYellow"/>
        <!-- 可选的，设置背景色为浅黄色 -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolTip}">
                    <Border BorderBrush="Black" BorderThickness="1" Background="{TemplateBinding Background}" Padding="5">
                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
                                              Content="{TemplateBinding Content}"
                                              Margin="{TemplateBinding Padding}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ImageBrush x:Key="btn" ImageSource="/SDBS3000;component/Utils/Image/支撑图形框.png"/>
  
    <!--用户管理页面-->
    <!--<ImageBrush x:Key="userbg" ImageSource="/SDBS3000;component/Utils/Image/User/用户页.png"/>-->
    <!--用户管理选中背景-->
    <ImageBrush x:Key="usertableselect" ImageSource="/SDBS3000;component/Utils/Image/User/选中框.png"/>
    <ImageBrush x:Key="usertablefgx" ImageSource="/SDBS3000;component/Utils/Image/User/分割线.png" Stretch="UniformToFill"/>

    <!--显示转速的顶部框-->
    <ImageBrush x:Key="warnpng" ImageSource="/SDBS3000;component/Utils/Image/报警背景.png"/>
    
    <!--标定界面按钮背景-->
    <!--<ImageBrush x:Key="calradiobj" ImageSource="/SDBS3000;component/Utils/Image/单选框1.png"/>-->
    <!--标定界面选中-->
    <!--<ImageBrush x:Key="calradiocheckedbj" ImageSource="/SDBS3000;component/Utils/Image/选择框.png"/>-->
    <BitmapImage x:Key="calstepbj" UriSource="/SDBS3000;component/Utils/Image/标定步骤背景.png"/>
    <ImageBrush x:Key="calrotor" ImageSource="/SDBS3000;component/Utils/Image/转子图片.png" Stretch="None"/>
    <BitmapImage x:Key="calarr" UriSource="/SDBS3000;component/Utils/Image/箭头.png"/>

    <!--夹具补偿-->
    <ImageBrush x:Key="clampbg" ImageSource="/SDBS3000;component/Utils/Image/Measure/夹具补偿（未选中）.png" Stretch="Uniform"/>
    <ImageBrush x:Key="uncheck" ImageSource="/SDBS3000;component/Utils/Image/SupMet/uncheck.png"/>
    <ImageBrush x:Key="check" ImageSource="/SDBS3000;component/Utils/Image/SupMet/check.png"/>
    <!--支撑界面蓝色渐变-->
    <LinearGradientBrush x:Key="confirm" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="{DynamicResource LinearColor3}" Offset="0.0"/>
        <GradientStop Color="{DynamicResource LinearColor4}" Offset="1.0"/>
    </LinearGradientBrush>
    <!--支撑界面红色渐变-->
    <LinearGradientBrush x:Key="qx" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#DF2121" Offset="0.0"/>
        <GradientStop Color="#3B0505" Offset="1.0"/>
    </LinearGradientBrush>
    <!--灰色渐变-->
    <LinearGradientBrush x:Key="cantclick" Opacity="0.6" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#8C8C8C" Offset="1.0"/>
        <GradientStop Color="#3E3E3E" Offset="0.0"/>
    </LinearGradientBrush>

   
    <BitmapImage x:Key="Addtf" UriSource="/SDBS3000;component/Utils/Image/Measure/加去重（未选中）.png"/>
    <BitmapImage x:Key="Add" UriSource="/SDBS3000;component/Utils/Image/Measure/加重.png"/>
    <BitmapImage x:Key="AddT" UriSource="/SDBS3000;component/Utils/Image/Measure/去重.png"/>
    <ImageBrush x:Key="topbtn" ImageSource="/SDBS3000;component/Utils/Image/User/topbtn.png" Stretch="Fill" />
    <ImageBrush x:Key="usermodify" ImageSource="/SDBS3000;component/Utils/Image/User/cenbtn.png" Stretch="Fill"/>
    <ImageBrush x:Key="usermodifyfill" ImageSource="/SDBS3000;component/Utils/Image/User/蓝色模块4.png"/>
    <ImageBrush x:Key="userdelete" ImageSource="/SDBS3000;component/Utils/Image/User/botbtn.png" Stretch="Fill" />

    <!--<ImageBrush x:Key="userinput1" ImageSource="/SDBS3000;component/Utils/Image/User/输入框1.png" Stretch="Fill"/>
    <ImageBrush x:Key="userinput5" ImageSource="/SDBS3000;component/Utils/Image/User/输入框1.png" Stretch="Fill"/>
    <ImageBrush x:Key="userinput2" ImageSource="/SDBS3000;component/Utils/Image/User/输入框2.png" Stretch="UniformToFill"/>
    <ImageBrush x:Key="userinput3" ImageSource="/SDBS3000;component/Utils/Image/User/输入框3.png" Stretch="UniformToFill"/>
    <ImageBrush x:Key="userinput4" ImageSource="/SDBS3000;component/Utils/Image/User/下拉框yh.png" Stretch="Fill"/>-->

    <ImageBrush x:Key="useradd2" ImageSource="/SDBS3000;component/Utils/Image/User/新增图标.png"/>
    <ImageBrush x:Key="usermodify2" ImageSource="/SDBS3000;component/Utils/Image/User/修改图标.png" />
    <ImageBrush x:Key="usersave2" ImageSource="/SDBS3000;component/Utils/Image/User/保存图标.png" />
    <ImageBrush x:Key="userdelete2" ImageSource="/SDBS3000;component/Utils/Image/User/删除图标.png" />
    <ImageBrush x:Key="userwxz" ImageSource="/SDBS3000;component/Utils/Image/Measure/按钮选中背景.png"/>


    <Color x:Key="circlevalue">#BFDF2121</Color>
    <RadialGradientBrush x:Key="measurecirOK" GradientOrigin="0.5,0.5">
        <GradientStop Offset="0" Color="Transparent"/>
        <GradientStop Offset="1" Color="#7F00FF48"/>
    </RadialGradientBrush>

    <!--圆上线条-->
    <SolidColorBrush x:Key="circlelinesolid" Color="#027FFF"/>
    <LinearGradientBrush x:Key="circlelinesolid1" StartPoint="0,0" EndPoint="1,1" MappingMode="RelativeToBoundingBox">
        <GradientStop Color="#027FFF" Offset="0"/>
        <GradientStop Color="#027FFF" Offset="0.45"/>
        <GradientStop Color="Transparent" Offset="0.45"/>
        <GradientStop Color="Transparent" Offset="0.55"/>
        <GradientStop Color="#027FFF" Offset="0.55"/>
        <GradientStop Color="#027FFF" Offset="1"/>
    </LinearGradientBrush>


    <SolidColorBrush x:Key="ComboBox.Static.Border2" Color="#FFACACAC"/>
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Background2" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Border2" Color="#FFABADB3"/>
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background2" Color="Transparent"/>
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border2" Color="Transparent"/>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph2" Color="#FF000000"/>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Border2" Color="#FF7EB4EA"/>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background2" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border2" Color="#FF7EB4EA"/>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border2" Color="#FF7EB4EA"/>
    <SolidColorBrush x:Key="ComboBox.Pressed.Glyph2" Color="#FF000000"/>
    <SolidColorBrush x:Key="ComboBox.Pressed.Border2" Color="#FF569DE5"/>
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background2" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border2" Color="#FF569DE5"/>
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border2" Color="#FF569DE5"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Glyph2" Color="#FFBFBFBF"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Background2" Color="#FFF0F0F0"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Border2" Color="#FFD9D9D9"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background2" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border2" Color="#FFBFBFBF"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background2" Color="Transparent"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border2" Color="Transparent"/>
    <SolidColorBrush x:Key="TextBox.Static.Background2" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ComboBox.Static.Glyph2" Color="#FF606060"/>
    <Style x:Key="FocusVisual2">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <LinearGradientBrush x:Key="ComboBox.MouseOver.Background2" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFECF4FC" Offset="0.0"/>
        <GradientStop Color="#FFDCECFC" Offset="1.0"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background2" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFEBF4FC" Offset="0.0"/>
        <GradientStop Color="#FFDCECFC" Offset="1.0"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ComboBox.Pressed.Background2" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFDAECFC" Offset="0.0"/>
        <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background2" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFDAEBFC" Offset="0.0"/>
        <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
    </LinearGradientBrush>
    <Style x:Key="ComboBoxToggleButton2" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="templateRoot" BorderBrush="{StaticResource ComboBox.Static.Border2}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource userinput1}" SnapsToDevicePixels="true">
                        <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0,0,15,0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                            <Path x:Name="arrow" Width="30" VerticalAlignment="Center" HorizontalAlignment="Left" Fill="{DynamicResource RecColor}" Data="M0,0 L16,0 8,9 Z"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="arrow" Value="white"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Fill" TargetName="arrow" Value="white"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" TargetName="arrow" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxToggleButton3" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="templateRoot" BorderBrush="{StaticResource ComboBox.Static.Border2}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource confirm}" CornerRadius="8" SnapsToDevicePixels="true">
                        <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0,0,15,0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                            <Path x:Name="arrow" Width="30" VerticalAlignment="Center" HorizontalAlignment="Left" Fill="{DynamicResource RecColor}" Data="M0,0 L16,0 8,9 Z"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="arrow" Value="white"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Fill" TargetName="arrow" Value="white"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" TargetName="arrow" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--ComboBox格式样式-->
    <ControlTemplate x:Key="ComboBoxTemplate2" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot"
           SnapsToDevicePixels="true"
           Tag="{TemplateBinding Tag}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.8*" />
                <ColumnDefinition Width="0.2*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition x:Name="row1" Height="*" />
                <RowDefinition Height="72" />
            </Grid.RowDefinitions>
            <!--  矩形块  -->
            <Rectangle Width="6"
                    Height="22"
                    Margin="3,0,0,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Fill="{DynamicResource RecColor}"
                    RadiusX="3"
                    RadiusY="3" />
            <Grid Grid.ColumnSpan="2">
                <TextBlock MaxWidth="220"
                        MaxHeight="60"
                        Margin="15,0,0,0"
                        VerticalAlignment="Center"
                        FontSize="18"
                        Foreground="{DynamicResource RecColor}"
                        Text="{Binding Tag, ElementName=templateRoot}"
                        TextWrapping="Wrap" />
            </Grid>
            <Popup x:Name="PART_Popup"
                Grid.Row="1"
                Grid.ColumnSpan="2"
                Margin="1"
                AllowsTransparency="true"
                IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                Placement="Bottom"
                PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <Themes:SystemDropShadowChrome x:Name="shadow"
                                            MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                                            MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                            Color="Transparent">
                    <Border x:Name="dropDownBorder"
                         Margin="5,0,0,0"
                         Background="{DynamicResource userinput6}"
                         BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="canvas"
                                     Width="0"
                                     Height="0"
                                     HorizontalAlignment="Left"
                                     VerticalAlignment="Top">
                                    <Rectangle x:Name="opaqueRect"
                                            Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                            Height="{Binding ActualHeight, ElementName=dropDownBorder}" />
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter"
                                             KeyboardNavigation.DirectionalNavigation="Contained"
                                             SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Themes:SystemDropShadowChrome>
            </Popup>
            <!--combox内部格式 包含下拉三角-->
            <ToggleButton x:Name="toggleButton"
                       Grid.Row="1"
                       Grid.ColumnSpan="2"
                       Background="{TemplateBinding Background}"
                       BorderBrush="{TemplateBinding BorderBrush}"
                       BorderThickness="{TemplateBinding BorderThickness}"
                       IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                       Style="{StaticResource ComboBoxToggleButton2}" />
            <ContentPresenter x:Name="contentPresenter"
                           Grid.Row="1"
                           Margin="{TemplateBinding Padding}"
                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                           Content="{TemplateBinding SelectionBoxItem}"
                           ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                           ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                           ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                           IsHitTestVisible="false"
                           SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="dropDownBorder" Property="Height" Value="120" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>
            <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <ControlTemplate x:Key="ComboBoxTemplate3" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot"
         SnapsToDevicePixels="true"
              
         Tag="{TemplateBinding Tag}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.8*" /> 
                <ColumnDefinition Width="0.2*" /> 
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions> 
                <RowDefinition Height="35" />
            </Grid.RowDefinitions>           
            <Grid Grid.ColumnSpan="2">
                <TextBlock MaxWidth="220"
                      MaxHeight="60"
                      Margin="15,0,0,0"
                      VerticalAlignment="Center"
                      FontSize="18"
                      Foreground="{DynamicResource RecColor}"
                      Text="{Binding Tag, ElementName=templateRoot}"
                      TextWrapping="Wrap" />
            </Grid>
            <Popup x:Name="PART_Popup"
              Grid.Row="1"
              Grid.ColumnSpan="2"
              Margin="1"
              AllowsTransparency="true"
              IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
              Placement="Bottom"
              PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <Themes:SystemDropShadowChrome x:Name="shadow"
                                          MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                                          MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                          Color="Transparent">
                    <Border x:Name="dropDownBorder"
                       Margin="5,0,0,0"
                       Background="{DynamicResource con}"
                       BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="canvas"
                                   Width="0"
                                   Height="0"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Top">
                                    <Rectangle x:Name="opaqueRect"
                                          Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                          Height="{Binding ActualHeight, ElementName=dropDownBorder}" />
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter"
                                           KeyboardNavigation.DirectionalNavigation="Contained"
                                           SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Themes:SystemDropShadowChrome>
            </Popup>
            <!--combox内部格式 包含下拉三角-->
            <ToggleButton x:Name="toggleButton"
                     Grid.Row="1"
                     Grid.ColumnSpan="2"
                     Background="{TemplateBinding Background}"
                     BorderBrush="#35BAFF"
                     BorderThickness="0.5"
                     IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                     Style="{DynamicResource ComboBoxToggleButton3}" />
            <ContentPresenter x:Name="contentPresenter"
                         Grid.Row="1"
                         Margin="{TemplateBinding Padding}"
                         HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                         VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                         Content="{TemplateBinding SelectionBoxItem}"
                         ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                         ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                         ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                         IsHitTestVisible="false"                              
                         SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="dropDownBorder" Property="Height" Value="120" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>
            <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>



    <Style x:Key="ComboBoxEditableTextBoxISO" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="False" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="FontSize" Value="22" />
        <Setter Property="Foreground" Value="{DynamicResource txtColor1}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SelectionBrush" Value="#02A5FF" />
        <Setter Property="CaretBrush" Value="{DynamicResource txtColor1}" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost"
                                 Background="Transparent"
                                 Focusable="True"
                                 HorizontalScrollBarVisibility="Hidden"
                                 VerticalScrollBarVisibility="Hidden" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <ControlTemplate x:Key="ComboBoxEditableTemplate2" TargetType="{x:Type ComboBox}">
        <!--  背景mark  -->
        <Border x:Name="border"
            Background="Transparent"
            CornerRadius="34">
            <Grid x:Name="templateRoot"
              Background="{DynamicResource userinput1}"
              SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="8*" />
                    <ColumnDefinition Width="2*" />
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup"
                   Grid.ColumnSpan="3"
                   AllowsTransparency="true"
                   IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                   Placement="Bottom"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <Themes:SystemDropShadowChrome x:Name="shadow"
                                               MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                                               MaxHeight="240"
                                               Color="Transparent">
                        <Border x:Name="dropDownBorder"
                            Margin="5,3,0,0"
                            Background="{DynamicResource userinput6}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top">
                                        <Rectangle x:Name="opaqueRect"
                                               Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                               Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                               Fill="{Binding Background, ElementName=dropDownBorder}" />
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter"
                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton"
                          Grid.ColumnSpan="2"
                          Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                          Style="{StaticResource ComboBoxToggleButton2}" />

                <TextBox x:Name="PART_EditableTextBox"
                     Margin="20,0,0,0"
                     HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                     VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                     InputMethod.IsInputMethodEnabled="False"
                     IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                     Style="{StaticResource ComboBoxEditableTextBoxISO}" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="dropDownBorder" Property="Height" Value="120" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="border" Property="Opacity" Value="0.56" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>
            <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    
    <Style x:Key="ComboBoxStyle2" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual2}"/>
        <Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border2}"/>
        <Setter Property="Foreground" Value="{DynamicResource txtColor1}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="20,0,0,0"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template" Value="{DynamicResource ComboBoxTemplate2}"/>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Padding" Value="2"/>
                <Setter Property="Template" Value="{DynamicResource ComboBoxEditableTemplate2}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ComboBoxStyle3" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual2}"/>
        <Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border2}"/>
        <Setter Property="Foreground" Value="{DynamicResource txtColor1}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="10,0,0,0"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template" Value="{DynamicResource ComboBoxTemplate3}"/>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Padding" Value="2"/>
                <Setter Property="Template" Value="{DynamicResource ComboBoxEditableTemplate2}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHover.Background" Color="Red"/>
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHover.Border" Color="#A826A0DA"/>
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelected.Background" Color="#3D26A0DA"/>
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelected.Border" Color="#FF26A0DA"/>
    <!--鼠标悬浮到当前项颜色-->
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedHover.Background" Color="#5426A0DA"/>
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedHover.Border" Color="#99006CD9"/>
    <!--当前项颜色-->
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedNoFocus.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedNoFocus.Border" Color="#FFDADADA"/>
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewFocus.Border" Color="#FF26A0DA"/>
    <!--鼠标悬浮颜色-->
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHoverFocus.Background" Color="#5426A0DA"/>
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHoverFocus.Border" Color="#FF26A0DA"/>
    <Style x:Key="ComboBoxItemStyle2" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="4,1" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <!--<Setter Property="Background" Value="Transparent" />-->
        <Setter Property="Foreground" Value="{DynamicResource txtColor1}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="20,5,0,5" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Bd"
                         Margin="7,3,7,3"
                         Padding="{TemplateBinding Padding}"
                         Background="{TemplateBinding Background}"
                         BorderBrush="{TemplateBinding BorderBrush}"
                         BorderThickness="{TemplateBinding BorderThickness}"
                         CornerRadius="5"
                         SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource ComboBoxItem.ItemsviewSelectedHover.Background}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ComboBoxItem.ItemsviewSelectedHover.Border}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsKeyboardFocused" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource ComboBoxItem.ItemsviewSelectedNoFocus.Background}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ComboBoxItem.ItemsviewSelectedNoFocus.Border}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsKeyboardFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ComboBoxItem.ItemsviewFocus.Border}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsKeyboardFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource ComboBoxItem.ItemsviewHoverFocus.Background}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ComboBoxItem.ItemsviewHoverFocus.Border}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--menuitem................................................................................................................-->
    <!--暗色调主菜单-->
    <FontFamily x:Key="WriteBrush1">/SDBS3000;Component/Utils/Family/#PingFang SC</FontFamily>
    <LinearGradientBrush x:Key="menubackgroud" EndPoint="0,0" StartPoint="0,1">
        <GradientStop Color="#1E4D74" Offset="0"/>
        <GradientStop Color="#062844" Offset="1"/>
    </LinearGradientBrush>
    <DropShadowEffect x:Key="menumaineffect"  Color="#7F0D314F" Direction="45" 
                          ShadowDepth="0" BlurRadius="2">
    </DropShadowEffect>

  
    <Style TargetType="MenuItem" x:Key="MenuSub">
        <Setter Property="Height" Value="auto"/>
        <Setter Property="MinHeight" Value="50"/>
        <Setter Property="MinWidth" Value="200"/>
        <Setter Property="Width" Value="auto"/>
        <Setter Property="FontSize" Value="22"/> 
        <Setter Property="Foreground" Value="{DynamicResource txtColor3}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="{StaticResource WriteBrush1}"/>
        <Setter Property="BorderBrush" Value="#FF26A0DA"/>
        <Setter Property="BorderThickness" Value="0.7,0,0.7,0"/>
        <Setter Property="Background" Value="{StaticResource menubackgroud}"/>
        <Setter Property="Effect" Value="{StaticResource menumaineffect}"/>
        <Setter Property="Template" Value="{StaticResource MenuItem_Template}"/>
    </Style>

    <ControlTemplate x:Key="Menu_SubMenu_Template"
                 TargetType="{x:Type MenuItem}">
        <Border x:Name="border"   Background="{DynamicResource MenubgNo}" Margin="10,10,10,10">

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="0"  Width="0" />
                    <ColumnDefinition Width="0" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="0" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="0" />
                </Grid.ColumnDefinitions>
                <!--// Icon //-->
                <ContentPresenter x:Name="Icon"
                              ContentSource="Icon"
                              HorizontalAlignment="Left"
                              Height="35"
                              Width="35"
                              Margin="10,0,0,0"
                              VerticalAlignment="Center" />
                <!--// Menu Text //-->
                <ContentPresenter ContentSource="Header"
                              Grid.Column="2" 
                              TextBlock.Foreground="{DynamicResource txtColor3}"                                                          
                              TextBlock.FontSize="20"
                              HorizontalAlignment="Left"
                              RecognizesAccessKey="True"
                              Margin="20,5,0,0"
                              VerticalAlignment="Center" >
                    <ContentPresenter.Resources>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="TextWrapping" Value="Wrap"/>
                        </Style>
                    </ContentPresenter.Resources>
                </ContentPresenter>
                <!--// Popup //-->
                <Popup x:Name="PART_Popup" Width="280"
                   AllowsTransparency="true"
                   Focusable="false"
                   HorizontalOffset="-2"
                   IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                   Placement="Bottom"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                   VerticalOffset="0">
                    <Border x:Name="SubMenuBorder"
                        Background="#106db0"
                        BorderBrush="#106db0">
                        <ScrollViewer x:Name="SubMenuScrollViewer"
                                  Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <Canvas HorizontalAlignment="Left"
                                    VerticalAlignment="Top" />
                                <ItemsPresenter x:Name="ItemsPresenter"
                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                            Grid.IsSharedSizeScope="true"
                                            KeyboardNavigation.TabNavigation="Cycle" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation"
          Value="true">
                <Setter Property="PopupAnimation"
             TargetName="PART_Popup"
             Value="None" />
            </Trigger>
            <Trigger Property="Icon"          Value="{x:Null}">
                <Setter Property="Visibility"             TargetName="Icon"             Value="Visible" />
            </Trigger>
            <Trigger Property="IsChecked"  Value="True">
                <Setter Property="Visibility" TargetName="Icon" Value="Visible" />
                <Setter Property="Background" TargetName="border" Value="{DynamicResource MenubgOn}"/>
            </Trigger>
            <Trigger Property="IsMouseOver"  Value="True">
                <Setter Property="Visibility" TargetName="Icon" Value="Visible" />
                <Setter Property="Background" TargetName="border" Value="{DynamicResource MenubgOn1}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="TextElement.Foreground" TargetName="border" Value="#FF707070"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--// Main Menu Template //-->

    <ControlTemplate x:Key="Menu_Template"
                 TargetType="{x:Type MenuItem}">

        <Border x:Name="border"
            Background="#106db0"
            BorderBrush="#106db0"
            BorderThickness="0"
            Height="60"
            Width="240">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="22"
                                  Width="Auto" />
                    <ColumnDefinition Width="13" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="30" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <!--// Icon //-->
                <ContentPresenter x:Name="Icon"
                              ContentSource="Icon"
                              HorizontalAlignment="Left"
                              Height="35"
                              Width="35"
                              Margin="10,0,0,0"
                              VerticalAlignment="Center" />
                <!--// Menu Text //-->
                <ContentPresenter ContentSource="Header"
                              Grid.Column="2"
                              TextBlock.Foreground="#02FFFF"
                              TextBlock.FontFamily="Fonts/#Roboto Light"
                              TextBlock.FontSize="23"
                              HorizontalAlignment="Left"
                              RecognizesAccessKey="True"
                              Margin="3,0,0,0"
                              VerticalAlignment="Center" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon"
                 Value="{x:Null}">
                <Setter Property="Visibility"
                    TargetName="Icon"
                    Value="Visible" />
            </Trigger>
            <Trigger Property="IsChecked"
                 Value="True">
                <Setter Property="Visibility"
                    TargetName="Icon"
                    Value="Visible" />
            </Trigger>
            <Trigger Property="IsHighlighted"
                 Value="True">
                <Setter Property="Background"
                    TargetName="border"
                    Value="#404D5B" />
                <Setter Property="BorderBrush"
                    TargetName="border"
                    Value="#404D5B" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="calbtn" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{DynamicResource calbtnbj}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource txtColor1}"/>
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Width" Value="361"/>
        <Setter Property="Height" Value="60"/>
        <Setter Property="Padding" Value="0,0,30,0"/>
        <Setter Property="IsEnabled" Value="False"/>
        <Setter Property="InputMethod.IsInputMethodEnabled" Value="false"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="156"/>
                                <ColumnDefinition Width="255*"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="{TemplateBinding Tag}" FontSize="20" Foreground="{DynamicResource txtColor4}" VerticalAlignment="Center" HorizontalAlignment="Left" Padding="15,0,0,0"/>
                            <ScrollViewer Grid.Column="1" x:Name="PART_ContentHost" IsEnabled="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <!--button样式-->
    <!--查询按钮 BorderBrush="#35BAFF"Background="{StaticResource confirm}"-->
    <Style x:Key="btnselect" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="150"/>
        <Setter Property="Height" Value="56"/>
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="Foreground" Value="{DynamicResource txtColor1}"/>
        <Setter Property="Background" Value="{DynamicResource confirm}"/>
        <Setter Property="BorderThickness" Value="1.5"/>
        <Setter Property="BorderBrush" Value="#35BAFF"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="5">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Opacity" TargetName="border" Value="0.8"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.9"/>
                            <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="btnokng" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="150"/>
        <Setter Property="Height" Value="56"/>
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="{StaticResource confirm}"/>
        <Setter Property="BorderThickness" Value="1.5"/>
        <Setter Property="BorderBrush" Value="#35BAFF"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="5">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Opacity" TargetName="border" Value="0.8"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.9"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type Button}" x:Key="NormalButtonStyle">
        <Setter Property="Foreground" Value="{DynamicResource txtColor1}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="White"/>
                            <Setter TargetName="border" Property="Background" Value="#FF4C6C99"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="White"/>
                            <Setter TargetName="border" Property="Background" Value="#FF2E5387"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TextBlock.mea" TargetType="TextBlock">
        <Setter Property="FontSize" Value="18"></Setter>
        <Setter Property="TextWrapping" Value="Wrap"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource txtColor1}"></Setter>
    </Style>

    <!--量值角度字体-->
    <Style x:Key="TextBlock.measurebglzjd" TargetType="{x:Type TextBlock}">
           <Setter Property="FontSize" Value="22"></Setter> 
           <Setter Property="Foreground" Value="{DynamicResource txtColor2}"/>
           <Setter Property="VerticalAlignment" Value="Center"/>
           <Setter Property="HorizontalAlignment" Value="Center"/>
           <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>


 

    <!--CheckBox-->
    <Style x:Key="calCheckbox" TargetType="{x:Type CheckBox}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisual}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="BorderBrush" Value="#35BAFF" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="FontSize" Value="22" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="templateRoot"
                        Margin="0,0,0,0"                         
                        Background="Transparent"
                        SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="checkboxBorder"
                              Width="31"
                              Height="31"
                              Margin="1,1,0,0"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Background="{DynamicResource rbticon1}"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              BorderThickness="{TemplateBinding BorderThickness}"
                              CornerRadius="8">
                            <Grid x:Name="markGrid" Margin="2">
                                <Rectangle x:Name="optionMark"
                                         MinWidth="55"
                                         MinHeight="55"
                                         Opacity="0"
                                         Visibility="Hidden" />
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter"
                                        Grid.Column="1"                                          
                                        TextBlock.FontSize="22"
                                        Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="Center"
                                        Focusable="False"
                                        RecognizesAccessKey="True"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}" />
                            <Setter Property="Padding" Value="4,-1,0,0" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="checkboxBorder" Property="Background" Value="{DynamicResource rbticon2}" />
                            <Setter TargetName="optionMark" Property="Visibility" Value="Visible" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="checkboxBorder" Property="Background" Value="{DynamicResource rbticon3}" />
                            <Setter TargetName="checkboxBorder" Property="BorderBrush" Value="#8C8C8C" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


<!--滚动条样式-->
    <Style x:Key="DarkScrollbarStyle" TargetType="{x:Type ScrollBar}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <!--  上箭头按钮  -->
                        <RepeatButton Background="Transparent"
                                 BorderBrush="Transparent"
                                 Command="ScrollBar.LineUpCommand"
                                 FontSize="20"
                                 Margin="-10,0"
                                 Foreground="{DynamicResource txtColor1}">
                            ▲
                        </RepeatButton>

                        <!--  滑轨  -->
                        <Track Name="PART_Track"
                          Grid.Row="1"
                          Width="23"
                          Margin="-10,0"
                          IsDirectionReversed="True">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Background="Transparent"
                                         BorderBrush="Transparent"
                                         Command="ScrollBar.PageUpCommand"
                                         Foreground="Transparent" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Background="Transparent"
                                         BorderBrush="Transparent"
                                         Command="ScrollBar.PageDownCommand"
                                         Foreground="Transparent" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Background="{DynamicResource scrollColor4}">
                                    <!--<Thumb Background="#C0C0C0">-->
                                    <!--  设置Thumb的圆角  -->
                                    <Thumb.Template>
                                        <ControlTemplate TargetType="Thumb">
                                            <Border Background="{TemplateBinding Background}" CornerRadius="10" />
                                        </ControlTemplate>
                                    </Thumb.Template>
                                </Thumb>
                            </Track.Thumb>
                        </Track>

                        <!--  下箭头按钮  -->
                        <RepeatButton Grid.Row="2"
                                 FontSize="20"
                                 Margin="-10,0"
                                 Background="Transparent"
                                 BorderBrush="Transparent"
                                 Command="ScrollBar.LineDownCommand"
                                 Foreground="{DynamicResource txtColor1}">
                            ▼
                        </RepeatButton>
                    </Grid>

                    <!--  设置ScrollBar背景的圆角  -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter TargetName="PART_Track" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
  




</ResourceDictionary>