<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:loc="clr-namespace:SDBS3000.Resources"
                    xmlns:local="clr-namespace:SDBS3000.Views"
      xmlns:uc1="clr-namespace:SDBS3000.Ucs;assembly=SDBS3000.Ucs">

    <!-- Background Colors   灰色#f3f3f3   左侧背景色-->
    <SolidColorBrush x:Key="PrimaryBackgroundColor" Color="Gray"/>
    <SolidColorBrush x:Key="SecundaryBackgroundColor" Color="#f9f9f9"/>

    <!-- Primary Colors #BFBFC4灰色-->
    <SolidColorBrush x:Key="PrimaryBlueColor" Color="#5B7FFF"/>
    <SolidColorBrush x:Key="PrimaryGrayColor" Color="Black"/>

    <!-- Secundary Colors -->
    <SolidColorBrush x:Key="SecundaryBlueColor" Color="#CEE8FB"/>
    <SolidColorBrush x:Key="SecundaryGrayColor" Color="#EEEEEE"/>

    <!-- Typograhy Colors -->
    <SolidColorBrush x:Key="TextPrimaryColor" Color="#020F16"/>
    <SolidColorBrush x:Key="TextSecundaryColor" Color="#434344"/>

    <!-- Icons Colors 最大化最小化图标颜色-->
    <SolidColorBrush x:Key="ActionIconColor" Color="White"/>


    <!--暗色调主菜单-->
    <LinearGradientBrush x:Key="menu1backgroud" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="{DynamicResource Menu1color1}" Offset="0"/>
        <GradientStop Color="{DynamicResource Menu1color2}" Offset="1"/>
    </LinearGradientBrush>
    <Color x:Key="Menu1color1">#FF363E52</Color>
    <Color x:Key="Menu1color2">#FF6772A6</Color>
    <SolidColorBrush x:Key="menu1color1" Color="#FF363E52"/>
    <SolidColorBrush x:Key="menu1color2" Color="#FF6772A6"/>
    <!--浅蓝色#87CEFA-->
    <!--很浅蓝色#F0F8FF-->
    <!--海天蓝#E4EEF4-->

    <!--暗色调*************************************************************************************************-->
    <!-- 菜单栏背景色-->
    <SolidColorBrush x:Key="Cdbj" Color="#E4EEF4"/>

    <!--暗色调#363D4E-->
    <!--暗色调菜单选中背景#212735-->
    <!--进度条-->
    <!--进度条默认颜色#D4DCEF 进度条加载颜色#005FCF-->
    <!--圆-->
    <!--浅色圆#E9F2FB   深色圆#D4DCEF  最外部圆弧#646C81-->


    <!--测量界面**************************************************************************************************-->
    <ImageBrush x:Key="measurebg" ImageSource="/SDBS3000;component/Utils/Image/Measure/main2-2.png"/>

  
  
    <SolidColorBrush x:Key="test" Color="#062541"/>

    
    <!--竖置 信号强度-->
    <Style x:Key="ProgressBarStyle1" TargetType="{x:Type ProgressBar}">
        <Setter Property="Orientation" Value="Vertical"/>
        <Setter Property="Width" Value="58"/>
        <Setter Property="Height" Value="272"/>
        <Setter Property="Maximum" Value="12"/>
        <Setter Property="Foreground" Value="Transparent"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Border BorderBrush="{DynamicResource measurekx}" BorderThickness="1">
                        <Grid x:Name="TemplateRoot">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Determinate"/>
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard RepeatBehavior="Forever">
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Animation">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)" Storyboard.TargetName="Animation">
                                                <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5"/>
                                                <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5"/>
                                                <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5"/>
                                            </PointAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                            <Rectangle x:Name="PART_Track" Fill="{DynamicResource measurekx2}"/>
                            <Grid x:Name="PART_Indicator" ClipToBounds="True" HorizontalAlignment="Left">
                                <!--value背景-->
                                <Rectangle x:Name="Indicator" Fill="Transparent"/>
                                <!--达到的信号条-->
                                <Rectangle x:Name="Animation" Fill="{DynamicResource measurekx}"  RenderTransformOrigin="0.5,0.5">
                                    <Rectangle.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Rectangle.RenderTransform>
                                </Rectangle>
                            </Grid>
                            <Path Stroke="{DynamicResource measurebgcolor}"  StrokeThickness="4">
                                <Path.Data>
                                    <GeometryGroup>
                                        <LineGeometry StartPoint="0,2" EndPoint="271,2" />
                                        <LineGeometry StartPoint="0,54" EndPoint="271,54"/>
                                    </GeometryGroup>
                                </Path.Data>
                            </Path>
                            <Path Stroke="{DynamicResource measurebgcolor}"  StrokeThickness="6">
                                <Path.Data>
                                    <GeometryGroup>
                                        <LineGeometry StartPoint="3,2" EndPoint="3,58" />
                                        <LineGeometry StartPoint="25,2" EndPoint="25,58" />
                                        <LineGeometry StartPoint="47,2" EndPoint="47,58" />
                                        <LineGeometry StartPoint="69,2" EndPoint="69,58" />

                                        <LineGeometry StartPoint="91,2" EndPoint="91,58" />
                                        <LineGeometry StartPoint="113,2" EndPoint="113,58" />
                                        <LineGeometry StartPoint="135,2" EndPoint="135,58" />
                                        <LineGeometry StartPoint="157,2" EndPoint="157,58" />

                                        <LineGeometry StartPoint="179,2" EndPoint="179,58" />
                                        <LineGeometry StartPoint="201,2" EndPoint="201,58" />
                                        <LineGeometry StartPoint="223,2" EndPoint="223,58" />
                                        <LineGeometry StartPoint="245,2" EndPoint="245,58" />

                                        <LineGeometry StartPoint="267,2" EndPoint="267,58" />
                                    </GeometryGroup>
                                </Path.Data>
                            </Path>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="True">
                            <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--横置 进度条-->
    <Style x:Key="ProgressBarStyle2" TargetType="{x:Type ProgressBar}">
        <Setter Property="Orientation" Value="Vertical"/>
        <Setter Property="Width" Value="225"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Maximum" Value="20"/>
        <Setter Property="Foreground" Value="Transparent"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Border BorderBrush="{DynamicResource measurekx}" BorderThickness="1">
                        <Grid x:Name="TemplateRoot">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Determinate"/>
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard RepeatBehavior="Forever">
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Animation">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)" Storyboard.TargetName="Animation">
                                                <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5"/>
                                                <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5"/>
                                                <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5"/>
                                            </PointAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                            <Rectangle x:Name="PART_Track" Fill="{DynamicResource measurekx2}"/>
                            <Grid x:Name="PART_Indicator" ClipToBounds="True" HorizontalAlignment="Left">
                                <!--value背景-->
                                <Rectangle x:Name="Indicator" Fill="Transparent"/>
                                <!--达到的信号条-->
                                <Rectangle x:Name="Animation" Fill="{DynamicResource measurekx}"  RenderTransformOrigin="0.5,0.5">
                                    <Rectangle.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Rectangle.RenderTransform>
                                </Rectangle>
                            </Grid>
                            <Path Stroke="{DynamicResource measurebgcolor}"  StrokeThickness="4">
                                <Path.Data>
                                    <GeometryGroup>
                                        <LineGeometry StartPoint="0,2" EndPoint="225,2" />
                                        <LineGeometry StartPoint="0,20" EndPoint="225,20"/>
                                    </GeometryGroup>
                                </Path.Data>
                            </Path>
                            <Path Stroke="{DynamicResource measurebgcolor}"  StrokeThickness="5">
                                <Path.Data>
                                    <GeometryGroup>
                                        <LineGeometry StartPoint="1,2" EndPoint="1,24" />
                                        <LineGeometry StartPoint="12,2" EndPoint="12,24" />
                                        <LineGeometry StartPoint="23,2" EndPoint="23,24" />
                                        <LineGeometry StartPoint="34,2" EndPoint="34,24" />
                                        <LineGeometry StartPoint="45,2" EndPoint="45,24" />
                                        <LineGeometry StartPoint="56,2" EndPoint="56,24" />

                                        <LineGeometry StartPoint="67,2" EndPoint="67,24" />
                                        <LineGeometry StartPoint="78,2" EndPoint="78,24" />
                                        <LineGeometry StartPoint="89,2" EndPoint="89,24" />
                                        <LineGeometry StartPoint="100,2" EndPoint="100,24" />
                                        <LineGeometry StartPoint="111,2" EndPoint="111,24" />
                                        <LineGeometry StartPoint="122,2" EndPoint="122,24" />

                                        <LineGeometry StartPoint="134,2" EndPoint="134,24" />
                                        <LineGeometry StartPoint="145,2" EndPoint="145,24" />
                                        <LineGeometry StartPoint="156,2" EndPoint="156,24" />
                                        <LineGeometry StartPoint="167,2" EndPoint="167,24" />
                                        <LineGeometry StartPoint="178,2" EndPoint="178,24" />
                                        <LineGeometry StartPoint="189,2" EndPoint="189,24" />
                                        <LineGeometry StartPoint="200,2" EndPoint="200,24" />
                                        <LineGeometry StartPoint="211,2" EndPoint="211,24" />
                                        <LineGeometry StartPoint="222,2" EndPoint="222,24" />
                                    </GeometryGroup>
                                </Path.Data>
                            </Path>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                <Setter.Value>
                                    <RotateTransform Angle="0"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="True">
                            <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--滑轨************** QS为默认颜色，SS为亮色 LeftColor为线性画刷 CircleColor径向圆刷-->
    <LinearGradientBrush x:Key="LeftColor" StartPoint="0,0" EndPoint="1,1">
        <GradientStop Offset="0.0" Color="#075243"/>
        <GradientStop Offset="1.0" Color="#00FF48"/>
    </LinearGradientBrush>
    <RadialGradientBrush x:Key="CircleColor" GradientOrigin="0.5,0.5">
        <GradientStop Offset="0.3" Color="#00FF48"/>
        <GradientStop Offset="0.65" Color="#00FF48"/>
        <GradientStop Offset="0.65" Color="Transparent"/>
        <GradientStop Offset="1.0" Color="Transparent"/>
    </RadialGradientBrush>

    <SolidColorBrush x:Key="QSColor" Color="#075243" Opacity="0.5"/>
    <SolidColorBrush x:Key="SSColor" Color="#00FF48"/>
    <Style x:Key="SliderStyle1" TargetType="{x:Type Slider}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
        <Setter Property="Width" Value="665"/>
        <Setter Property="Height" Value="15"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="IsEnabled" Value="True"/>
        <Setter Property="Maximum" Value="12"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,0,0,2" Placement="Top" Grid.Row="0" Visibility="Collapsed"/>
                            <TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,2,0,0" Placement="Bottom" Grid.Row="2" Visibility="Collapsed"/>
                            <Border x:Name="TrackBackground" BorderBrush="#FFD6D6D6" BorderThickness="0" Background="Transparent" Height="4" Margin="0,0" Grid.Row="1" VerticalAlignment="Center">
                                <Canvas Margin="0">
                                    <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Height="4" Visibility="Hidden"/>
                                </Canvas>
                            </Border>
                            <Track x:Name="PART_Track" Grid.Row="1">
                                <!--左划块-->
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="Slider.DecreaseLarge">
                                        <RepeatButton.Style>
                                            <Style TargetType="{x:Type RepeatButton}">
                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                <Setter Property="Background" Value="{DynamicResource LeftColor}"/>
                                                <Setter Property="Focusable" Value="False"/>
                                                <Setter Property="IsTabStop" Value="False"/>
                                                <Setter Property="Height" Value="4"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                            <Rectangle Margin="0,1,0,0" Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </RepeatButton.Style>
                                    </RepeatButton>
                                </Track.DecreaseRepeatButton>
                                <!--右划块-->
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="Slider.IncreaseLarge">
                                        <RepeatButton.Style>
                                            <Style TargetType="{x:Type RepeatButton}">
                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                <Setter Property="Background" Value="{DynamicResource QSColor}"/>
                                                <Setter Property="Focusable" Value="False"/>
                                                <Setter Property="IsTabStop" Value="False"/>
                                                <Setter Property="Height" Value="4"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                            <Rectangle Margin="0,1,0,0" Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </RepeatButton.Style>
                                    </RepeatButton>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <!--Height="18" Width="11"-->
                                    <Thumb x:Name="Thumb" Focusable="False" OverridesDefaultStyle="True" VerticalAlignment="Center">
                                        <Thumb.Template>
                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                                                    <!--<Path x:Name="grip" Data="M0,0C0,0 11,0 11,0 11,0 11,18 11,18 11,18 0,18 0,18 0,18 0,0 0,0z" Fill="#FFF0F0F0" Stretch="Fill" SnapsToDevicePixels="True" Stroke="#FFACACAC" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center"/>-->
                                                    <Ellipse x:Name="grip" Width="12" Height="12" Fill="{DynamicResource CircleColor}" Stroke="{DynamicResource SSColor}" StrokeThickness="1"/>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Fill" TargetName="grip" Value="#FFDCECFC"/>
                                                        <Setter Property="Stroke" TargetName="grip" Value="#FF7EB4EA"/>
                                                    </Trigger>
                                                    <Trigger Property="IsDragging" Value="True">
                                                        <Setter Property="Fill" TargetName="grip" Value="#FFDAECFC"/>
                                                        <Setter Property="Stroke" TargetName="grip" Value="#FF569DE5"/>
                                                    </Trigger>
                                                    <!--<Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Fill" TargetName="grip" Value="#FFF0F0F0"/>
                                                            <Setter Property="Stroke" TargetName="grip" Value="#FFD9D9D9"/>
                                                        </Trigger>-->
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Thumb.Template>
                                    </Thumb>
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TickPlacement" Value="TopLeft">
                            <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                            <Setter Property="Template" TargetName="Thumb">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                        <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                                            <Path x:Name="grip" Data="M0,6C0,6 5.5,0 5.5,0 5.5,0 11,6 11,6 11,6 11,18 11,18 11,18 0,18 0,18 0,18 0,6 0,6z" Fill="#FFF0F0F0" Stretch="Fill" SnapsToDevicePixels="True" Stroke="#FFACACAC" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Fill" TargetName="grip" Value="#FFDCECFC"/>
                                                <Setter Property="Stroke" TargetName="grip" Value="#FF7EB4EA"/>
                                            </Trigger>
                                            <Trigger Property="IsDragging" Value="True">
                                                <Setter Property="Fill" TargetName="grip" Value="#FFDAECFC"/>
                                                <Setter Property="Stroke" TargetName="grip" Value="#FF569DE5"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Fill" TargetName="grip" Value="#FFF0F0F0"/>
                                                <Setter Property="Stroke" TargetName="grip" Value="#FFD9D9D9"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Margin" TargetName="TrackBackground" Value="5,2,5,0"/>
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="BottomRight">
                            <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                            <Setter Property="Template" TargetName="Thumb">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                        <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                                            <Path x:Name="grip" Data="M0,12C0,12 5.5,18 5.5,18 5.5,18 11,12 11,12 11,12 11,0 11,0 11,0 0,0 0,0 0,0 0,12 0,12z" Fill="#FFF0F0F0" Stretch="Fill" SnapsToDevicePixels="True" Stroke="#FFACACAC" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Fill" TargetName="grip" Value="#FFDCECFC"/>
                                                <Setter Property="Stroke" TargetName="grip" Value="#FF7EB4EA"/>
                                            </Trigger>
                                            <Trigger Property="IsDragging" Value="True">
                                                <Setter Property="Fill" TargetName="grip" Value="#FFDAECFC"/>
                                                <Setter Property="Stroke" TargetName="grip" Value="#FF569DE5"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Fill" TargetName="grip" Value="#FFF0F0F0"/>
                                                <Setter Property="Stroke" TargetName="grip" Value="#FFD9D9D9"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Margin" TargetName="TrackBackground" Value="5,0,5,2"/>
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="Both">
                            <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsSelectionRangeEnabled" Value="True">
                            <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Slider}">
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition MinWidth="{TemplateBinding MinWidth}" Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TickBar x:Name="TopTick" Grid.Column="0" Fill="{TemplateBinding Foreground}" Margin="0,0,2,0" Placement="Left" Visibility="Collapsed" Width="4"/>
                                    <TickBar x:Name="BottomTick" Grid.Column="2" Fill="{TemplateBinding Foreground}" Margin="2,0,0,0" Placement="Right" Visibility="Collapsed" Width="4"/>
                                    <Border x:Name="TrackBackground" BorderBrush="#FFD6D6D6" BorderThickness="1" Background="#FFE7EAEA" Grid.Column="1" HorizontalAlignment="Center" Margin="0,5" Width="4">
                                        <Canvas Margin="-1,-6">
                                            <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Visibility="Hidden" Width="4"/>
                                        </Canvas>
                                    </Border>
                                    <Track x:Name="PART_Track" Grid.Column="1">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="Slider.DecreaseLarge">
                                                <RepeatButton.Style>
                                                    <Style TargetType="{x:Type RepeatButton}">
                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                        <Setter Property="Background" Value="Transparent"/>
                                                        <Setter Property="Focusable" Value="False"/>
                                                        <Setter Property="IsTabStop" Value="False"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </RepeatButton.Style>
                                            </RepeatButton>
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="Slider.IncreaseLarge">
                                                <RepeatButton.Style>
                                                    <Style TargetType="{x:Type RepeatButton}">
                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                        <Setter Property="Background" Value="Transparent"/>
                                                        <Setter Property="Focusable" Value="False"/>
                                                        <Setter Property="IsTabStop" Value="False"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </RepeatButton.Style>
                                            </RepeatButton>
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb x:Name="Thumb" Focusable="False" Height="11" OverridesDefaultStyle="True" VerticalAlignment="Top" Width="18">
                                                <Thumb.Template>
                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                        <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                                                            <Path x:Name="grip" Data="M0.5,0.5L18.5,0.5 18.5,11.5 0.5,11.5z" Fill="#FFF0F0F0" Stretch="Fill" Stroke="#FFACACAC"/>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Fill" TargetName="grip" Value="#FFDCECFC"/>
                                                                <Setter Property="Stroke" TargetName="grip" Value="#FF7EB4EA"/>
                                                            </Trigger>
                                                            <Trigger Property="IsDragging" Value="True">
                                                                <Setter Property="Fill" TargetName="grip" Value="#FFDAECFC"/>
                                                                <Setter Property="Stroke" TargetName="grip" Value="#FF569DE5"/>
                                                            </Trigger>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Fill" TargetName="grip" Value="#FFF0F0F0"/>
                                                                <Setter Property="Stroke" TargetName="grip" Value="#FFD9D9D9"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Thumb.Template>
                                            </Thumb>
                                        </Track.Thumb>
                                    </Track>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="TickPlacement" Value="TopLeft">
                                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                    <Setter Property="Template" TargetName="Thumb">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                                                    <Path x:Name="grip" Data="M6,11C6,11 0,5.5 0,5.5 0,5.5 6,0 6,0 6,0 18,0 18,0 18,0 18,11 18,11 18,11 6,11 6,11z" Fill="#FFF0F0F0" Stretch="Fill" Stroke="#FFACACAC"/>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Fill" TargetName="grip" Value="#FFDCECFC"/>
                                                        <Setter Property="Stroke" TargetName="grip" Value="#FF7EB4EA"/>
                                                    </Trigger>
                                                    <Trigger Property="IsDragging" Value="True">
                                                        <Setter Property="Fill" TargetName="grip" Value="#FFDAECFC"/>
                                                        <Setter Property="Stroke" TargetName="grip" Value="#FF569DE5"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Fill" TargetName="grip" Value="#FFF0F0F0"/>
                                                        <Setter Property="Stroke" TargetName="grip" Value="#FFD9D9D9"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Margin" TargetName="TrackBackground" Value="2,5,0,5"/>
                                </Trigger>
                                <Trigger Property="TickPlacement" Value="BottomRight">
                                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                                    <Setter Property="Template" TargetName="Thumb">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                                                    <Path x:Name="grip" Data="M12,11C12,11 18,5.5 18,5.5 18,5.5 12,0 12,0 12,0 0,0 0,0 0,0 0,11 0,11 0,11 12,11 12,11z" Fill="#FFF0F0F0" Stretch="Fill" Stroke="#FFACACAC"/>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Fill" TargetName="grip" Value="#FFDCECFC"/>
                                                        <Setter Property="Stroke" TargetName="grip" Value="#FF7EB4EA"/>
                                                    </Trigger>
                                                    <Trigger Property="IsDragging" Value="True">
                                                        <Setter Property="Fill" TargetName="grip" Value="#FFDAECFC"/>
                                                        <Setter Property="Stroke" TargetName="grip" Value="#FF569DE5"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Fill" TargetName="grip" Value="#FFF0F0F0"/>
                                                        <Setter Property="Stroke" TargetName="grip" Value="#FFD9D9D9"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Margin" TargetName="TrackBackground" Value="0,5,2,5"/>
                                </Trigger>
                                <Trigger Property="TickPlacement" Value="Both">
                                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                                </Trigger>
                                <Trigger Property="IsSelectionRangeEnabled" Value="True">
                                    <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <DropShadowEffect x:Key="measurefg"  ShadowDepth="0" Color="White" BlurRadius="3"/>
    <!--表格字体-->
    <!--<Style x:Key="measurebgzt" TargetType="{x:Type Label}">
        <Setter Property="FontSize" Value="52"/>
        <Setter Property="Foreground" Value="{DynamicResource measurezs}"/>
        <Setter Property="Effect" Value="{DynamicResource measurefg}"/>
        <Setter Property="Width" Value="250"/>
        <Setter Property="Height" Value="70"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
    </Style>-->
    <!--表格字体-->
    <Style x:Key="measurebgzt" TargetType="{x:Type Label}">
        <Setter Property="FontSize" Value="45"/>
        <Setter Property="FontWeight" Value="Heavy"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource measurezs}"/>
        <Setter Property="Height" Value="70"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>

    </Style>
    <!--没有发光效果-->
    <Style x:Key="measurebgzt2" TargetType="{x:Type Label}">
        <Setter Property="FontSize" Value="52"/>
        <Setter Property="Foreground" Value="{DynamicResource measurezs}"/>
        <!--<Setter Property="Effect" Value="{StaticResource measurefg}"/>-->
        <Setter Property="Width" Value="250"/>
        <Setter Property="Height" Value="70"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
    </Style>
    <!--量值角度字体-->
    <Style x:Key="measurebglzjd" TargetType="{x:Type Label}">
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="Foreground" Value="#35BAFF"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
    </Style>

    <Style x:Key="UserStatusBarStyle1" TargetType="{x:Type local:UserStatusBar}">
        <Setter Property="RotorInformation" Value="{Binding [Rotor Name],Source={x:Static loc:LanguageManager.Instance}}"/>
        <Setter Property="RotorInformation1" Value="{Binding Rotor.NAME}"/>
        <Setter Property="RotorInformation2" Value="{Binding [cutmode],Source={x:Static loc:LanguageManager.Instance}}"/>
        <Setter Property="RotorInformation3" Value="{Binding Rotor.Zcfs}"/>
        <Setter Property="RotorInformation4" Value="{Binding [Measure Rev],Source={x:Static loc:LanguageManager.Instance}}"/>
        <Setter Property="RotorInformation5" Value="{Binding Rotor.Speed}"/>

        <Setter Property="Grid.ColumnSpan" Value="10"/>
        <Setter Property="Clear" Value="{Binding ClearNum}"/>
        <Setter Property="CardState" Value="{Binding CardState}"/>
        <Setter Property="ConCardState" Value="{Binding ConCardState}"/>
        <Setter Property="Times" Value="{Binding Times}"/>
        <Setter Property="RunState" Value="{Binding RunState}"/>

        <Setter Property="Clys" Value="{Binding Clys}"/>
        <Setter Property="OKNum" Value="{Binding OKNum}"/>
        <Setter Property="NGNum" Value="{Binding NGNum}"/>
        <Setter Property="TotalNum" Value="{Binding TotalNum}"/>
        <Setter Property="Compesation" Value="{Binding Compesation}"/>
        <Setter Property="JjContent" Value="{Binding [Jj],Source={x:Static loc:LanguageManager.Instance}}"/>
        <Setter Property="Jj" Value="{Binding Jjbc}"/>
        <Setter Property="JContent" Value="{Binding [J],Source={x:Static loc:LanguageManager.Instance}}"/>
        <Setter Property="J" Value="{Binding Jbc}"/>
        <Setter Property="CheckBox_Content" Value="{Binding [Elctcomp],Source={x:Static loc:LanguageManager.Instance}}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:UserStatusBar}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding WorkMode}" Value="0">
                            <Setter Property="WorkMode"  Value="{Binding [workmode0],Source={x:Static loc:LanguageManager.Instance}}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding WorkMode}" Value="1">
                            <Setter Property="WorkMode"  Value="{Binding [workmode1],Source={x:Static loc:LanguageManager.Instance}}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding WorkMode}" Value="2">
                            <Setter Property="WorkMode"  Value="{Binding [workmode2],Source={x:Static loc:LanguageManager.Instance}}"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding RunState}" Value="0">
                            <Setter Property="RunState"  Value="{Binding [Stop],Source={x:Static loc:LanguageManager.Instance}}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RunState}" Value="1">
                            <Setter Property="RunState"  Value="{Binding [Measuringing],Source={x:Static loc:LanguageManager.Instance}}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RunState}" Value="2">
                            <Setter Property="RunState"  Value="{Binding [MeasuringCompleted],Source={x:Static loc:LanguageManager.Instance}}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RunState}" Value="3">
                            <Setter Property="RunState"  Value="测量准备"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RunState}" Value="4">
                            <Setter Property="RunState"  Value="预热期过滤"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding CardIsonline}" Value="true">
                            <Setter Property="CardState"  Value="{Binding [CardOnLine],Source={x:Static loc:LanguageManager.Instance}}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding CardIsonline}" Value="false">
                            <Setter Property="CardState"  Value="{Binding [CardOffLine],Source={x:Static loc:LanguageManager.Instance}}"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding ConCardIsonline}" Value="true">
                            <Setter Property="ConCardState"  Value="{Binding [ConCardOnLine],Source={x:Static loc:LanguageManager.Instance}}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ConCardIsonline}" Value="false">
                            <Setter Property="ConCardState"  Value="{Binding [ConCardOffLine],Source={x:Static loc:LanguageManager.Instance}}"/>
                        </DataTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="calRadiobtn" TargetType="{x:Type RadioButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="#35BAFF"/>
        <Setter Property="Margin" Value="0,15,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True" Margin="0,5,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Border CornerRadius="8" x:Name="radioButtonBorder" Width="50" Height="50" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource rbticon1}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,1,2,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid x:Name="markGrid" Margin="2">
                                <Rectangle x:Name="optionMark" Visibility="Hidden" MinWidth="55" MinHeight="55" Opacity="0"/>
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                            <Setter Property="Padding" Value="4,-1,0,0"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" TargetName="radioButtonBorder" Value="{DynamicResource rbticon2}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="radioButtonBorder" Value="{DynamicResource rbticon3}"/>
                            <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="#8C8C8C"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--用户管理界面**************************************************************************************************-->
    <!--<ImageBrush x:Key="measureuser" ImageSource="/Image/img/用户管理.jpg"/>-->
</ResourceDictionary>