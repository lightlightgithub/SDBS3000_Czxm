<Window x:Name="window" x:Class="SDBS3000.NMessageBox"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        WindowState="Maximized" WindowStartupLocation="CenterScreen" 
        xmlns:loc="clr-namespace:SDBS3000.Resources"
        WindowStyle="None" ResizeMode="NoResize" BorderThickness="1,0,1,1"
        BorderBrush="#FF3C74D6" Background="Transparent" AllowsTransparency="True"
        Loaded="Win_Loaded" Closed="Win_Closed">
    <Window.Resources>
        <Style TargetType="{x:Type Button}" x:Key="NormalButtonStyle">
            <Setter Property="Foreground" Value="{DynamicResource txtColor1}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Background" Value="{DynamicResource confirm}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource txtColor1}"/>
                                <Setter TargetName="border" Property="Background" Value="#FF4C6C99"/>
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource txtColor1}"/>
                                <Setter TargetName="border" Property="Background" Value="#FF2E5387"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>

                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="NotNormalButtonStyle">
            <Setter Property="Foreground" Value="{DynamicResource txtColor1}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Opacity" Value="0.8"/>
            <Setter Property="Background" Value="#FF40A6A6"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="White"/>
                                <Setter TargetName="border" Property="Background" Value="#FF4C6C99"/>
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Foreground" Value="White"/>
                                <Setter TargetName="border" Property="Background" Value="#FF2E5387"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>

                </Setter.Value>
            </Setter>
        </Style>

        <Storyboard x:Key="StoryboardWinLoaded">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="grid">
                <EasingDoubleKeyFrame KeyTime="0" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <BackEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <BackEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="grid">
                <EasingDoubleKeyFrame KeyTime="0" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <BackEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <BackEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)" Storyboard.TargetName="window">
                <EasingThicknessKeyFrame KeyTime="0" Value="0"/>
                <EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="0"/>
                <EasingThicknessKeyFrame KeyTime="0:0:0.4" Value="1,0,1,1"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <!--快捷键资源-->
        <RoutedUICommand x:Key="Enter" Text="确定"/>
        <RoutedUICommand x:Key="Y" Text="是"/>
        <RoutedUICommand x:Key="N" Text="否"/>
        <RoutedUICommand x:Key="C" Text="取消"/>
        <RoutedUICommand x:Key="Q" Text="关闭"/>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Modifiers="Ctrl" Key="Enter" Command="{StaticResource Enter}"/>
        <KeyBinding Modifiers="Ctrl" Key="Y" Command="{StaticResource Y}"/>
        <KeyBinding Modifiers="Ctrl" Key="N" Command="{StaticResource N}"/>
        <KeyBinding Modifiers="Ctrl" Key="C" Command="{StaticResource C}"/>
        <KeyBinding Modifiers="Ctrl" Key="Q" Command="{StaticResource Q}"/>
    </Window.InputBindings>
    <Window.CommandBindings>
        <CommandBinding Command="{StaticResource Enter}" Executed="CmdBinding_Enter"/>
        <CommandBinding Command="{StaticResource Y}" Executed="CmdBinding_Y"/>
        <CommandBinding Command="{StaticResource N}" Executed="CmdBinding_N"/>
        <CommandBinding Command="{StaticResource C}" Executed="CmdBinding_Esc"/>
        <CommandBinding Command="{StaticResource Q}" Executed="CmdBinding_Cancel"/>
    </Window.CommandBindings>
    <Window.Triggers>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
            <BeginStoryboard Storyboard="{StaticResource StoryboardWinLoaded}"/>
        </EventTrigger>
    </Window.Triggers>
    <Viewbox>
        <Grid  Height="1080" Width="1920">
            <Border CornerRadius="52" Height="350" Width="450">
                <Grid x:Name="grid" RenderTransformOrigin="0.5,0.5" Background="{DynamicResource txtColor1}" Height="350" Width="450">
                    <Grid.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Grid.RenderTransform>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="40"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0" Background="{DynamicResource tipBg}" MouseLeftButtonDown="OnMouseLeftButtonDownAtTitlee">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="40"/>
                            <ColumnDefinition Width="40"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Column="0" VerticalAlignment="Center"
                       Text="{Binding MessageBoxTitle}"
                       ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Text}"
                       Foreground="{DynamicResource txtColor1}" FontWeight="Bold" FontSize="20"/>

                        <Button Grid.Column="1" Click="MinWindowButton_Click" Style="{StaticResource NormalButtonStyle}" TabIndex="4" Background="Transparent">
                            <Line X1="0" X2="30" Fill="{DynamicResource txtColor1}" Stroke="{DynamicResource txtColor1}" StrokeThickness="1"/>
                        </Button>

                        <Button x:Name="CloseWindowBtn" Grid.Column="2" Click="CloseWindowButton_Click" Style="{StaticResource NormalButtonStyle}" TabIndex="5" Background="Transparent">
                            <Canvas>
                                <Line X1="-15" Y1="-15" X2="15" Y2="15" Fill="{DynamicResource txtColor1}" Stroke="{DynamicResource txtColor1}" StrokeThickness="1"/>
                                <Line X1="-15"  Y1="15"  X2="15" Y2="-15" Fill="{DynamicResource txtColor1}" Stroke="{DynamicResource txtColor1}" StrokeThickness="1"/>
                            </Canvas>
                        </Button>
                    </Grid>

                    <Grid Grid.Row="1">
                        <Grid Background="{DynamicResource tipBg1}">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="50"/>
                            </Grid.RowDefinitions>
                            <StackPanel Grid.Row="0" VerticalAlignment="Center" Orientation="Horizontal" HorizontalAlignment="Center">
                                <Image Source="{Binding ImagePath}"/>
                                <TextBlock Foreground="{DynamicResource txtColor1}" VerticalAlignment="Center" HorizontalAlignment="Center" TextWrapping="WrapWithOverflow" MaxWidth="350" MaxHeight="220" 
                           Text="{Binding MessageBoxText}" FontSize="24"
                           ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Text}"/>
                            </StackPanel>

                            <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Center">
                                <Button Content="{Binding [NMB_Enter],Source={x:Static loc:LanguageManager.Instance}}" x:Name="OKButton" Width="130" Height="40" Click="OKButton_Click" Margin="20,0,20,0"
                                    Style="{StaticResource NormalButtonStyle}" TabIndex="0"
                                    Visibility="{Binding OKButtonVisibility, Mode=OneWay}"/>
                                <Button Content="{Binding [NMB_Y],Source={x:Static loc:LanguageManager.Instance}}"  x:Name="YesButton" Width="90" Height="40" Click="YesButton_Click" Margin="20,0,20,0"
                                    Style="{StaticResource NormalButtonStyle}" TabIndex="1"
                                    Visibility="{Binding YesButtonVisibility, Mode=OneWay}"/>
                                <Button Content="{Binding [NMB_N],Source={x:Static loc:LanguageManager.Instance}}" x:Name="NoButton" Width="90" Height="40" Click="NoButton_Click" Margin="20,0,20,0"
                                    Style="{StaticResource NormalButtonStyle}" TabIndex="2"
                                    Visibility="{Binding NoButtonVisibility, Mode=OneWay}"/>
                                <Button Content="{Binding [NMB_Cancel],Source={x:Static loc:LanguageManager.Instance}}" x:Name="CancelButton" Width="90" Height="40" Click="CancelButton_Click" Margin="20,0,20,0"
                                    Style="{StaticResource NormalButtonStyle}" TabIndex="3"
                                    Visibility="{Binding CancelButtonVisibility, Mode=OneWay}"/>
                            </StackPanel>
                        </Grid>
                    </Grid>
                </Grid>
            </Border>
        </Grid>
    </Viewbox>

</Window>
