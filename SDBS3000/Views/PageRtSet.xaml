<Page x:Class="SDBS3000.Views.PageRtSet"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:SDBS3000.Views"
      xmlns:loc="clr-namespace:SDBS3000.Resources"
      xmlns:uc1="clr-namespace:SDBS3000.Ucs.Controls;assembly=SDBS3000.Ucs"
      xmlns:cvt="clr-namespace:SDBS3000.Utils.Converters"
      DataContext="{Binding Source={StaticResource Locator},Path=RtSet}"
      mc:Ignorable="d"  x:Name="Rt" Unloaded="Rt_Unloaded"
      d:DesignHeight="880" d:DesignWidth="1920"
      Title="PageRtSet">
    <Page.Resources>
        <cvt:GetSptUrl x:Key="geturl"/>
        <cvt:GetEnable x:Key="getenable"/>
        <cvt:GetMargin x:Key="getmargin"/>
        <cvt:NullText x:Key="nulltext"/>
        <ImageBrush x:Key="sm1" ImageSource="/SDBS3000;component/Utils/Image/SupMet1.png" Stretch="None"/>
        <BitmapImage x:Key="stm1" UriSource="/SDBS3000;component/Utils/Image/SupMet/stm1.png"/>
        <!--支撑方式画刷-->
        <LinearGradientBrush x:Key="confirm" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#35BAFF" Offset="1.0"/>
            <GradientStop Color="#073045" Offset="0.0"/>
        </LinearGradientBrush>
        <Style TargetType="uc1:CareTextBox">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="CaretBrush" Value="White"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="Width" Value="90"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontSize" Value="22"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="InputMethod.IsInputMethodEnabled" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <Grid VerticalAlignment="Center">
                                <ScrollViewer  x:Name="PART_ContentHost" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <!--<TextBlock  x:Name="PART_ContentHost" Text="Null" FontSize="22" Foreground="White" Visibility="Collapsed"/>-->
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Margin" Value="0">
                                <Setter Property="Visibility" TargetName="PART_ContentHost" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="Margin" Value="0">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>
    <Page.InputBindings>
        <KeyBinding Modifiers="Ctrl" Key="N" Command="{Binding Add}" CommandParameter="{Binding ElementName=choosecbx}"/>
        <KeyBinding Modifiers="Ctrl" Key="I" Command="{Binding ISO}"/>
        <KeyBinding Modifiers="Ctrl" Key="S" Command="{Binding RtSetSave}" CommandParameter="{Binding ElementName=Rt}"/>
        <KeyBinding Modifiers="Ctrl" Key="D" Command="{Binding Delete}"/>
    </Page.InputBindings>
    <Border x:Name="main" Width="1730" Height="680" CornerRadius="20" >
        <Border.Background>
            <ImageBrush ImageSource="{DynamicResource mainbk}"/>
        </Border.Background>
        <Grid Focusable="True" x:Name="Jiaodian">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="557"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="195"/>
                </Grid.ColumnDefinitions>
                <WrapPanel>
                    <uc1:SetItem x:Name="name" Height="126" Width="220" LabelText="{Binding [Rotor Name], Source={x:Static loc:LanguageManager.Instance}}" Text="{Binding Rotor.NAME,Mode=TwoWay}" Margin="40,40,0,0"/>
                    <ComboBox Tag="{Binding [Calculation Mode], Source={x:Static loc:LanguageManager.Instance}}" x:Name="jsms" Style="{StaticResource ComboBoxStyle2}" SelectedIndex="{Binding Rotor.Jsms,Mode=TwoWay}" SelectionChanged="Jsms_SelectionChanged" ItemContainerStyle="{DynamicResource ComboBoxItemStyle2}" Height="126" Width="220" Margin="37,42,0,0">
                        <ComboBoxItem Content="{Binding [Hard bearing], Source={x:Static loc:LanguageManager.Instance}}"/>
                        <ComboBoxItem Content="{Binding [Soft bearing], Source={x:Static loc:LanguageManager.Instance}}"/>
                    </ComboBox>
                    <ComboBox Tag="{Binding [Measuring unit], Source={x:Static loc:LanguageManager.Instance}}" x:Name="ccdw" ToolTip="{Binding [ABCR1], Source={x:Static loc:LanguageManager.Instance}}" Style="{StaticResource ComboBoxStyle2}" SelectedIndex="{Binding Rotor.Ccdw,Mode=TwoWay}" ItemContainerStyle="{DynamicResource ComboBoxItemStyle2}" Height="126" Width="220" Margin="37,40,0,0">
                        <ComboBoxItem Content="mm"/>
                        <ComboBoxItem Content="cm"/>
                        <ComboBoxItem Content="m"/>
                        <ComboBoxItem Content="inch"/>
                        <ComboBoxItem Content="foot"/>
                    </ComboBox>
                    <ComboBox Tag="{Binding [Measuring Mode], Source={x:Static loc:LanguageManager.Instance}}" x:Name="clms" Style="{StaticResource ComboBoxStyle2}" SelectedIndex="{Binding Rotor.Clms,Mode=TwoWay}" ItemContainerStyle="{DynamicResource ComboBoxItemStyle2}" Height="126" Width="220" Margin="37,40,0,0">
                        <ComboBoxItem Content="{Binding [two plane dynamic balance], Source={x:Static loc:LanguageManager.Instance}}"/>
                        <ComboBoxItem Content="{Binding [static balance], Source={x:Static loc:LanguageManager.Instance}}"/>
                        <ComboBoxItem Content="{Binding [dynamic/static balance], Source={x:Static loc:LanguageManager.Instance}}"/>
                        <ComboBoxItem Content="{Binding [vertical two plane dynamic balance], Source={x:Static loc:LanguageManager.Instance}}"/>
                        <ComboBoxItem Content="{Binding [vertical dynamic/static balance], Source={x:Static loc:LanguageManager.Instance}}"/>
                    </ComboBox>
                    <!--0=g 1=mg 2=g.mm 3=g.cm-->
                    <ComboBox Tag="{Binding [Permissible amount unit], Source={x:Static loc:LanguageManager.Instance}}" x:Name="yxldw" Style="{StaticResource ComboBoxStyle2}" SelectedIndex="{Binding Rotor.Yxldw,Mode=TwoWay}" ItemContainerStyle="{DynamicResource ComboBoxItemStyle2}" Height="126" Width="220" Margin="37,40,0,0">
                        <ComboBoxItem Content="g"/>
                        <ComboBoxItem Content="mg"/>
                        <ComboBoxItem Content="g.mm"/>
                        <ComboBoxItem Content="g.cm"/>
                    </ComboBox>
                    <uc1:SetItem Height="126" LabelText="{Binding [Permissible Unbalance on Plane 1], Source={x:Static loc:LanguageManager.Instance}}" x:Name="pmyyxl" Text="{Binding Rotor.Pmyyxl,Mode=TwoWay,Converter={StaticResource nulltext}}" Margin="37,35,0,0" Limit="2"/>
                    <uc1:SetItem Width="220" LabelText="{Binding [Static permissible amount], Source={x:Static loc:LanguageManager.Instance}}" x:Name="jyxl" Text="{Binding Rotor.Jyxl,Mode=TwoWay,Converter={StaticResource nulltext}}" Margin="40,35,0,0" Limit="2"/>
                    <uc1:SetItem Height="126" LabelText="{Binding [Permissible Unbalance on Plane 2], Source={x:Static loc:LanguageManager.Instance}}" x:Name="pmeyxl" Text="{Binding Rotor.Pmeyxl,Mode=TwoWay,Converter={StaticResource nulltext}}" Margin="37,35,0,0" Limit="2"/>
                </WrapPanel>
                <StackPanel Grid.Column="2" x:Name="stackPanelright" HorizontalAlignment="Right">
                    <StackPanel.Resources >
                                 
                        <Style TargetType="Label">
                            <Setter Property="Margin" Value="0,20,0,0"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="FontSize" Value="24"/>
                            <Setter Property="Foreground" Value="{DynamicResource txtColor1}"/>
                        </Style>
                        <Style x:Key="autowrap" TargetType="TextBlock">
                            <Setter Property="Margin" Value="0,20,0,0"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                            <Setter Property="FontSize" Value="24"/>
                            <Setter Property="Foreground" Value="{DynamicResource txtColor1}"/>
                            <Setter Property="TextWrapping" Value="Wrap"/>
                            <Setter Property="MinHeight" Value="80"/>
                        </Style>
                        <Style TargetType="Image">
                            <Setter Property="Height" Value="63"/>
                            <Setter Property="Stretch" Value="Uniform"/>
                            <Setter Property="Margin" Value="0,18,0,0"/>
                        </Style>
                    </StackPanel.Resources>
                    <Button   Style="{DynamicResource btnStyle}" x:Name="b1" Command="{Binding Add}" CommandParameter="{Binding ElementName=choosecbx}">
                        <Button.Content>
                            <StackPanel Width="{Binding ElementName=b1,Path=ActualWidth}" Height="{Binding ElementName=b1,Path=ActualHeight}">
                                <Image Source="/SDBS3000;component/Utils/Icon/Add.png"/>
                                <Label Content="{Binding [add], Source={x:Static loc:LanguageManager.Instance}}"/>
                            </StackPanel>
                        </Button.Content>
                    </Button>
                    <Button  Style="{DynamicResource btnStyle}" Command="{Binding ISO}">
                        <Button.Content>
                            <StackPanel Width="{Binding ElementName=b1,Path=ActualWidth}" Height="{Binding ElementName=b1,Path=ActualHeight}">
                                <Image  Source="/SDBS3000;component/Utils/Icon/Calcu.png" />
                                <TextBlock Style="{StaticResource autowrap}" HorizontalAlignment="Center" Text="{Binding [iso], Source={x:Static loc:LanguageManager.Instance}}" MaxWidth="180"/>
                            </StackPanel>
                        </Button.Content>
                    </Button>
                    <Button  Style="{DynamicResource btnStyle}" Command="{Binding RtSetSave}" CommandParameter="{Binding ElementName=Rt}" IsEnabled="{Binding IsEditing}">
                        <Button.Content>
                            <StackPanel Width="{Binding ElementName=b1,Path=ActualWidth}" Height="{Binding ElementName=b1,Path=ActualHeight}">
                                <Image Source="/SDBS3000;component/Utils/Icon/Save.png" />
                                <Label Content="{Binding [save], Source={x:Static loc:LanguageManager.Instance}}"/>
                            </StackPanel>
                        </Button.Content>
                    </Button>
                    <Button  Style="{DynamicResource btnStyle}"   Command="{Binding Delete}" IsEnabled="{Binding IsEditing,Converter={StaticResource GetNegateBool}}">
                        <Button.Content>
                            <StackPanel Width="{Binding ElementName=b1,Path=ActualWidth}" Height="{Binding ElementName=b1,Path=ActualHeight}">
                                <Path Data="{DynamicResource dele}" Stretch="Uniform" Width="60" Margin="0,20,0,0" Fill="#37c2fe"/>
                                <Label Content="{Binding [delete], Source={x:Static loc:LanguageManager.Instance}}"/>
                            </StackPanel>
                        </Button.Content>
                    </Button>
                </StackPanel>
            </Grid>
            <!--布局采用绝对定位-->
            <ComboBox x:Name="choosecbx" ItemsSource="{Binding RotorSets,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="NAME" SelectedItem="{Binding Rotor,Mode=TwoWay}" Height="72" Width="276" Margin="771,55,673,545"  Background="{DynamicResource userinput5}" Style="{DynamicResource ComboBoxStyle2}" ItemContainerStyle="{DynamicResource ComboBoxItemStyle2}">
            </ComboBox>
            <TextBlock Text="{Binding [Choose Rotor], Source={x:Static loc:LanguageManager.Instance}}"  FontSize="21" Margin="620,84,950,573" Foreground="{DynamicResource txtColor1}"/>
            <Button Width="260" Height="110" Content="{Binding [cutmode], Source={x:Static loc:LanguageManager.Instance}}" FontSize="21" Margin="1162,54,298,516" Command="{Binding ChooseSupmet}" CommandParameter="{Binding ElementName=jsms,Path=SelectedIndex}">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Width" Value="150"/>
                        <Setter Property="Height" Value="56"/>
                        <Setter Property="FontSize" Value="24"/>
                        <Setter Property="Foreground" Value="{DynamicResource txtColor1}"/>
                        <Setter Property="Background" Value="{DynamicResource zckbg}"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="Padding" Value="1"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border x:Name="border" BorderBrush="{DynamicResource zckbk}" BorderThickness="2" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="10">
                                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsDefaulted" Value="true">
                                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="Opacity" TargetName="border" Value="0.8"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="true">
                                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Style>
            </Button>

            <Grid  Width="923" Height="361" Margin="562,259,235,60">
                <!--<Image Source="/SDBS3000;component/Utils/Image/SupMet/stm11.png" Stretch="Uniform"/>-->
                <Image x:Name="zcfs" Source="{Binding Zcfs,Converter={StaticResource geturl}}" Stretch="Uniform"/>
            </Grid>
            <uc1:CareTextBox Name="A" Text="{Binding Rotor.A,Converter={StaticResource nulltext}}" Margin="{Binding Zcfs,Converter={StaticResource getmargin},ConverterParameter=0}"  PreviewTextInput="TextBox_PreviewTextInput"/>
            <uc1:CareTextBox Name="B" Text="{Binding Rotor.B,Converter={StaticResource nulltext}}" Margin="{Binding Zcfs,Converter={StaticResource getmargin},ConverterParameter=1}"  PreviewTextInput="TextBox_PreviewTextInput"/>
            <uc1:CareTextBox Name="C" Text="{Binding Rotor.C,Converter={StaticResource nulltext}}"  Margin="{Binding Zcfs,Converter={StaticResource getmargin},ConverterParameter=2}"  PreviewTextInput="TextBox_PreviewTextInput"/>
            <uc1:CareTextBox Name="R1" Text="{Binding Rotor.R1,Converter={StaticResource nulltext}}" Margin="{Binding Zcfs,Converter={StaticResource getmargin},ConverterParameter=3}" Visibility="{Binding Rotor.Clms,Converter={StaticResource getenable},ConverterParameter=3}" Panel.ZIndex="2"  PreviewTextInput="TextBox_PreviewTextInput"/>
            <uc1:CareTextBox Name="R2" Text="{Binding Rotor.R2,Converter={StaticResource nulltext}}" Margin="{Binding Zcfs,Converter={StaticResource getmargin},ConverterParameter=4}" Visibility="{Binding Rotor.Clms,Converter={StaticResource getenable},ConverterParameter=2}"  PreviewTextInput="TextBox_PreviewTextInput"/>
            <uc1:CareTextBox Name="Speed" Text="{Binding Rotor.Speed,Converter={StaticResource nulltext}}" Margin="{Binding Zcfs,Converter={StaticResource getmargin},ConverterParameter=5}" FontSize="32" Width="220" Height="45" VerticalContentAlignment="Center"  PreviewTextInput="TextBox_PreviewTextInput">
                <uc1:CareTextBox.Resources>
                    <VisualBrush x:Key="HintText" TileMode="None" Opacity="0.8" Stretch="None" AlignmentX="Center">
                        <VisualBrush.Visual>
                            <TextBlock Text="{Binding [setspeed], Source={x:Static loc:LanguageManager.Instance}}" Foreground="White" FontSize="22" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </VisualBrush.Visual>
                    </VisualBrush>
                </uc1:CareTextBox.Resources>
                <!--<uc1:CareTextBox.Style>
                    <Style TargetType="uc1:CareTextBox">
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="CaretBrush" Value="White"/>
                        <Setter Property="Height" Value="35"/>
                        <Setter Property="Width" Value="90"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="FontSize" Value="22"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="InputMethod.IsInputMethodEnabled" Value="false"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TextBox}">
                                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                        <Grid VerticalAlignment="Center">
                                            <ScrollViewer  x:Name="PART_ContentHost" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            --><!--<TextBlock  x:Name="PART_ContentHost" Text="Null" FontSize="22" Foreground="White" Visibility="Collapsed"/>--><!--
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="Margin" Value="0">
                                            <Setter Property="Visibility" TargetName="PART_ContentHost" Value="Collapsed"/>
                                        </Trigger>
                                        <Trigger Property="Margin" Value="0">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                                        </Trigger>
                                        <Trigger Property="IsKeyboardFocused" Value="true">
                                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                                        </Trigger>
                                        <Trigger Property="Text" Value="{x:Null}">
                                            <Setter Property="Background" Value="{StaticResource HintText}"/>
                                        </Trigger>
                                        <Trigger Property="Text" Value="">
                                            <Setter Property="Background" Value="{StaticResource HintText}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </uc1:CareTextBox.Style>-->
            </uc1:CareTextBox>
        </Grid>
    </Border>
</Page>
