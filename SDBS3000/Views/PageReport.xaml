<Page x:Class="SDBS3000.Views.PageReport"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:loc="clr-namespace:SDBS3000.Resources"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:SDBS3000.Views"
      xmlns:sys="clr-namespace:System;assembly=mscorlib"
      xmlns:UI="clr-namespace:SDBS3000.Ucs;assembly=SDBS3000.Ucs"
      mc:Ignorable="d" 
      d:DesignHeight="880" d:DesignWidth="1920"
      Title="PageReport"  Unloaded="Page_Unloaded">
    <Grid>
        <Grid.Resources>

        </Grid.Resources>
        <WrapPanel Margin="100,60,0,0" >
            <UI:FlatDatePicker x:Name="begintime" Margin="0,0,0,0" Width="160" Height="33" BorderThickness="0.5" Background="{StaticResource confirm}" Foreground="{DynamicResource txtColor1}" BorderBrush="#35BAFF"  SelectedDate="{Binding BeginTime}"/>
            <Label Content="~" Foreground="{DynamicResource txtColor1}" FontSize="22"/>
            <UI:FlatDatePicker x:Name="endtime" Width="160" Height="33" BorderThickness="0.5" Background="{StaticResource confirm}" Foreground="{DynamicResource txtColor1}" BorderBrush="#35BAFF" SelectedDate="{Binding EndTime}"/>
            <WrapPanel>
                <WrapPanel.Resources>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Margin" Value="20,0,0,0"/>
                        <Setter Property="MinWidth" Value="100"/>
                        <Setter Property="Height" Value="33"/>
                        <Setter Property="FontSize" Value="18"/>
                        <Setter Property="Foreground" Value="{DynamicResource txtColor1}"/>
                        <Setter Property="Background" Value="{DynamicResource confirm}"/>
                        <Setter Property="BorderThickness" Value="0.5"/>
                        <Setter Property="BorderBrush" Value="#35BAFF"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="Padding" Value="1"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="5">
                                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsDefaulted" Value="true">
                                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="Opacity" TargetName="border" Value="0.8"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="true">
                                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Opacity" TargetName="border" Value="0.9"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </WrapPanel.Resources>
                <!--查询 当日 昨日 当月 当年 导出至Excel-->
                <ComboBox  VerticalAlignment="Center"  ItemsSource="{Binding RotorItems}" Style="{DynamicResource ComboBoxStyle3}" 
                                         SelectedItem="{Binding CurrentRotor}"  DisplayMemberPath="RotorName" Width="100" Margin="20,0,0,0" />
                <Button x:Name="searchBtn"  Command="{Binding SearchCommand}" Content="查询"/>
                <!--<Button x:Name="look" Content="{Binding [select], Source={x:Static loc:LanguageManager.Instance}}"/>-->
                <Button x:Name="look1" Content="{Binding [today], Source={x:Static loc:LanguageManager.Instance}}" Margin="40,0,0,0" Command="{Binding TodayCommand}"/>
                <Button x:Name="look2" Content="{Binding [yesterday], Source={x:Static loc:LanguageManager.Instance}}" Command="{Binding YesterdayCommand}"/>
                <Button x:Name="look3" Content="{Binding [thismonth], Source={x:Static loc:LanguageManager.Instance}}" Command="{Binding ThisMonthCommand}"/>
                <Button x:Name="look4" Content="{Binding [thisyear], Source={x:Static loc:LanguageManager.Instance}}" Command="{Binding ThisYearCommand}"/>
                <Button x:Name="export" Content="{Binding [export], Source={x:Static loc:LanguageManager.Instance}}" Command="{Binding ExportToExcelCommand}"/>
                <Button x:Name="clear" Content="{Binding [Clear data], Source={x:Static loc:LanguageManager.Instance}}" Command="{Binding ClearCommand}"/>
                <Button   Content="test"  Margin="20,0,0,0" Width="120" Height="38" FontSize="18" VerticalAlignment="Center" Style="{StaticResource btnselect}" Command="{Binding CalCommand}"/>
                <Button x:Name="exportToCPK" Content="导出CPK" Command="{Binding ExportToCPKCommand}"/>
            </WrapPanel>
        </WrapPanel>
        <Border x:Name="main" Width="1730" Height="680" CornerRadius="20" Padding="10,5,0,5">
            <Border.Background>
                <ImageBrush ImageSource="{DynamicResource mainbk}"/>
            </Border.Background>
            <StackPanel Margin="0,10,0,5">
                <DataGrid x:Name="datagrid1"  ItemsSource="{Binding DataResult}"  AutoGenerateColumns="False"
                          MaxWidth="1700" MaxHeight="685" FontSize="20" BorderBrush="Transparent" LoadingRow="Datagrid_LoadingRow"
                          IsReadOnly="True"  HorizontalAlignment="Left" HeadersVisibility="All" VerticalAlignment="Top" CanUserAddRows="False" 
                        HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto"  AlternatingRowBackground="{DynamicResource  tipBg3}" RowBackground="{DynamicResource  tipBg4}" RowHeaderWidth="0"
                        GridLinesVisibility="Horizontal" Padding="10,10,0,12" HorizontalGridLinesBrush="Transparent" VerticalGridLinesBrush="Transparent" RowHeight="35"
                        VerticalContentAlignment="Center" SelectionMode="Extended" Style="{DynamicResource DataGridStyle1}">
                    <DataGrid.Resources>
                        <Style TargetType="ScrollBar" BasedOn="{StaticResource ScrollStyle_Mobile}"></Style>
                        <!--纵向滚动条宽度-->
                        <sys:Double   x:Key="VerticalScrollBarThickness">12</sys:Double>
                        <!--纵向滑块圆角-->
                        <CornerRadius x:Key="VerticalThumbCornerRadius"  >5</CornerRadius>
                        <!--横向滚动条宽度-->
                        <sys:Double   x:Key="HorizontalScrollBarThickness">12</sys:Double>
                        <!--横向滑块圆角-->
                        <CornerRadius x:Key="HorizontalThumbCornerRadius"  >5</CornerRadius>

                        <Style TargetType="DataGridCell" x:Key="jsms">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding }" Value="1">
                                    <Setter Property="Background" Value="Red"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.Resources>
                    <DataGrid.ColumnHeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="Height" Value="40"/>
                            <Setter Property="FontSize" Value="18"/>
                            <Setter Property="Padding" Value="0,5,40,0"/>
                            <Setter Property="Foreground" Value="{DynamicResource txtColor1}"/>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderBrush" Value="LightBlue"/>
                            <Setter Property="BorderThickness" Value="0.5"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                        </Style>
                    </DataGrid.ColumnHeaderStyle>
                    <DataGrid.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="Padding" Value="20,0,20,0"/>
                            <Setter Property="BorderBrush" Value="LightBlue"/>
                            <Setter Property="BorderThickness" Value="0.5"/>
                            <Style.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="{DynamicResource txtColor1}" />
                                </Trigger>
                                <MultiTrigger>
                                    <!-- 失去焦点时背景颜色 -->
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="true"/>
                                        <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="Foreground" Value="{DynamicResource txtColor1}"/>
                                </MultiTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.CellStyle>
                    <DataGrid.Columns>
                        <DataGridTemplateColumn Header="勾选" Width="80">                            
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox IsChecked="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Style="{DynamicResource calCheckbox}"
                                              VerticalAlignment="Center" HorizontalAlignment="Center" IsEnabled="True"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn FontSize="16" Header="ID号" Binding="{Binding RowID}"/>
                        <DataGridTextColumn FontSize="16" Header="测量ID" Binding="{Binding ID}" Visibility="Hidden"/>
                        <DataGridTextColumn FontSize="16" Header="转子id" Binding="{Binding RotorID}" Width="80"/>
                        <DataGridTextColumn FontSize="16" Header="转子名称" Binding="{Binding NAME}" Width="120"/>
                        <DataGridTextColumn FontSize="16" Header="操作者id" Binding="{Binding UserID}" Width="120"/>
                        <DataGridTextColumn FontSize="16" Header="测量转速" Binding="{Binding rpm}" Width="120"/>
                        <DataGridTextColumn FontSize="16" Header="左信号量" Binding="{Binding singleL}" Width="120"/>
                        <DataGridTextColumn FontSize="16" Header="右信号量" Binding="{Binding singleR}" Width="120"/>
                        <DataGridTextColumn FontSize="16" Header="左量值" Binding="{Binding fl}" Width="100"/>
                        <DataGridTextColumn FontSize="16" Header="左相位" Binding="{Binding ql}" Width="100"/>
                        <DataGridTextColumn FontSize="16" Header="右量值" Binding="{Binding fr}" Width="100"/>
                        <DataGridTextColumn FontSize="16" Header="右相位" Binding="{Binding qr}" Width="100"/>
                        <DataGridTextColumn FontSize="16" Header="静量值" Binding="{Binding fm}" Width="100"/>
                        <DataGridTextColumn FontSize="16" Header="静相位" Binding="{Binding qm}" Width="100"/>
                        <DataGridTextColumn FontSize="16" Header="是否合格" Binding="{Binding Ispass}" Width="120"/>
                        <DataGridTextColumn FontSize="16" Header="支撑方式" Binding="{Binding Zcfs}" Width="120"/>
                        <DataGridTextColumn FontSize="16" Header="解算模式" Binding="{Binding Jsms}" Width="120"/>
                        <DataGridTextColumn FontSize="16" Header="测量模式" Binding="{Binding Clms}" Width="120"/>
                        <DataGridTextColumn FontSize="16" Header="测量单位" Binding="{Binding Ccdw}" Width="120"/>
                        <DataGridTextColumn FontSize="16" Header="允许量单位" Binding="{Binding Yxldw}" Width="140"/>
                        <DataGridTextColumn FontSize="16" Header="平面一允许量" Binding="{Binding Pmyyxl}" Width="160"/>
                        <DataGridTextColumn FontSize="16" Header="平面二允许量" Binding="{Binding Pmeyxl}" Width="160"/>
                        <DataGridTextColumn FontSize="16" Header="静允许量" Binding="{Binding Jyxl}" Width="120"/>
                        <DataGridTextColumn FontSize="16" Header="A" Binding="{Binding A}" Width="60"/>
                        <DataGridTextColumn FontSize="16" Header="B" Binding="{Binding B}" Width="60"/>
                        <DataGridTextColumn FontSize="16" Header="C" Binding="{Binding C}" Width="60"/>
                        <DataGridTextColumn FontSize="16" Header="R1" Binding="{Binding R1}" Width="60"/>
                        <DataGridTextColumn FontSize="16" Header="R2" Binding="{Binding R2}" Width="60"/>
                        <DataGridTextColumn FontSize="16" Header="设置转速" Binding="{Binding Duringtime}" Width="120"/>
                        <DataGridTextColumn FontSize="16" Header="节拍" Binding="{Binding Speed}" Width="80"/>
                        <DataGridTextColumn FontSize="16" Header="静加去重" Binding="{Binding Jjjz}" Width="140"/>
                        <DataGridTextColumn FontSize="16" Header="平面一加去重" Binding="{Binding Pmyjjz}" Width="160"/>
                        <DataGridTextColumn FontSize="16" Header="平面二加去重" Binding="{Binding Pmejjz}" Width="160"/>
                        <DataGridTextColumn FontSize="16" Header="保存时间" Binding="{Binding OperateTime}" Width="180"/>

                    </DataGrid.Columns>
                </DataGrid>

            </StackPanel>
        </Border>

        <WrapPanel Margin="900,800,0,0">
            <WrapPanel.Resources>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Margin" Value="20,0,0,0"/>
                    <Setter Property="MinWidth" Value="100"/>
                    <Setter Property="Height" Value="33"/>
                    <Setter Property="FontSize" Value="18"/>
                    <Setter Property="Foreground" Value="{DynamicResource txtColor1}"/>
                    <Setter Property="Background" Value="{DynamicResource confirm}"/>
                    <Setter Property="BorderThickness" Value="0.5"/>
                    <Setter Property="BorderBrush" Value="#35BAFF"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Padding" Value="1"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="5">
                                    <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsDefaulted" Value="true">
                                        <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Opacity" TargetName="border" Value="0.8"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Opacity" TargetName="border" Value="0.9"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <Style TargetType="Label">
                    <Setter Property="BorderBrush" Value="Transparent"></Setter>
                    <Setter Property="Foreground" Value="{DynamicResource txtColor1}" ></Setter>
                    <Setter Property="FontSize" Value="22" ></Setter>
                    <Setter Property="HorizontalContentAlignment" Value="Center" ></Setter>
                    <Setter Property="HorizontalAlignment" Value="Center" ></Setter>
                    <Setter Property="Margin" Value="20,0,0,0" ></Setter>
                </Style>
            </WrapPanel.Resources>
            <Button Command="{Binding SelectAllCommand}">全选</Button>

            <Button Command="{Binding SelectNoneCommand}">取消</Button>
            <Button x:Name="lastPage"   Content="上一页"  Margin="20,0,0,0" Width="120" Height="38"  Command="{Binding LastPageCommand}"/>
            <Button x:Name="nextPage"  Content="下一页"  Margin="20,0,0,0" Width="120" Height="38"  Command="{Binding NextPageCommand}"/>
            <Label Foreground="Black" FontSize="22">页码:</Label>
            <Label  x:Name="pageNum" Content="{Binding PageNum}"  />
            <Label Width="20" Margin="10,0,0,0" FontSize="22">/</Label>
            <Label x:Name="totalPage" Content="{Binding PageCount}" />
            <Label Foreground="Black" FontSize="20">总数量:</Label>
            <Label x:Name="totalCount" Content="{Binding TotalCount}" />


        </WrapPanel>

    </Grid>
</Page>